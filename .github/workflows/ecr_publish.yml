name: Publish ecr

permissions:
  id-token: write
  contents: write

on:
  workflow_dispatch:
    inputs:
      version:
        description: Define the version for the image
        required: true

jobs:
  ecr-build:
    runs-on: ubuntu-latest # Corrected the spelling of 'ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Configure AWS creds via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::292095839402:role/oidc-github-actions-deployer
          aws-region: us-east-1
          mask-aws-account-id: 'false'
      - name: Login to ECR Docker
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Publish image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: fetchrewards/xcmetrics-backend
          IMAGE_TAG: ${{ inputs.version }}
        run: |
          echo $ECR_REGISTRY
          echo $ECR_REPOSITORY
          echo $IMAGE_TAG
          docker buildx build -t fetchrewards/$ECR_REPOSITORY:$IMAGE_TAG --platform=linux/amd64 --build-arg GO_PROXY=$GOPROXY .
          docker tag fetchrewards/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
